digraph "LiveCommonPartWidget"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="LiveCommonPartWidget",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="构造函数，初始化直播通用部分控件"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="initUi",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_live_common_part_widget.html#ac76e5fd0461eb6c984286d02b0c7ce8a",tooltip="初始化界面"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="arg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$base_8h.html#a2c8e80c1b1c8b7747e99b8e9a24a0429",tooltip="Returns a named argument to be used in a formatting function."];
  Node3 -> Node3 [id="edge3_Node000003_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node4 [id="edge4_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="initLineOne",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_live_common_part_widget.html#a8ebeb2cbc821faf67e8652b035024f32",tooltip="初始化第一行"];
  Node4 -> Node3 [id="edge5_Node000004_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node5 [id="edge6_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="getFileCount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_live_common_part_widget.html#a14447e0d41d420b03f6ffb75fe68d61c",tooltip="获取目录文件数量"];
  Node4 -> Node6 [id="edge7_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="initOK",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_live_common_part_widget.html#a7f7039ea8eeaddfa317c0b1e2c669bd9",tooltip="初始化完成信号"];
  Node2 -> Node7 [id="edge8_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="initLineTwo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_live_common_part_widget.html#aebf8970689c7c2ae36c7f2b205c68fe5",tooltip="初始化第二行"];
  Node7 -> Node3 [id="edge9_Node000007_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node5 [id="edge10_Node000007_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node6 [id="edge11_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node8 [id="edge12_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Async::onResultReady",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_async.html#aa546dd398e11dcb564e4abdd6fd0ec81",tooltip="执行结果读取函数 创建一个QFutureWatcher读取相应结果传递相应函数中， 如果有更复杂操作就不要使用"];
  Node2 -> Node9 [id="edge13_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Async::runAsync",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_async.html#a06a076edc2f7af2cc0ecdc6545d55e79",tooltip="runAsync类似于 std::thread和std::invoke 函数参数可以是成员函数 操作符 可以是 lambda表达式 QFutureInterface<ResultType>&作为第一个参..."];
  Node1 -> Node1 [id="edge14_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
}
