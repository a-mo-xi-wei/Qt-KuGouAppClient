digraph "iterator_buffer&lt; OutputIt, enable_if_t&lt; is_back_insert_iterator&lt; OutputIt &gt;::value &amp;&amp;is_contiguous&lt; typename OutputIt::container_type &gt;::value, typename OutputIt::container_type::value_type &gt; &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="iterator_buffer\< OutputIt,\l enable_if_t\< is_back_insert\l_iterator\< OutputIt \>::value\l &&is_contiguous\< typename OutputIt\l::container_type \>::value, typename\l OutputIt::container_type::value_type \> \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="buffer_traits",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structdetail_1_1buffer__traits.html",tooltip=" "];
  Node3 -> Node1 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="buffer\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classdetail_1_1buffer.html",tooltip="A contiguous memory buffer with an optional growing ability."];
  Node4 -> Node1 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="container_buffer\< Output\lIt::container_type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classdetail_1_1container__buffer.html",tooltip=" "];
  Node5 -> Node4 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="buffer\< OutputIt::container\l_type::value_type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classdetail_1_1buffer.html",tooltip=" "];
}
