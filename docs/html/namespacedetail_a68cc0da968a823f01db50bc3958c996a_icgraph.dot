digraph "bit_cast"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="bit_cast",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="detail::basic_fp\< unsigned\l long long \>::assign",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdetail_1_1basic__fp.html#ae4a39682504a114dff51693d7d53ebb0",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="bit_cast",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a4f3e6fe77d13d60f16e2871c47ed636b",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="format_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a6f5e9a91b995411cd8aa9d6870e8bcdd",tooltip=" "];
  Node4 -> Node4 [id="edge4_Node000004_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node5 [id="edge5_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="write_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a503a3fdae408f07dae7003840f786b53",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="is_big_endian",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a932030736a98a7841a7921ca0309c647",tooltip=" "];
  Node6 -> Node3 [id="edge7_Node000006_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="write_digit2_separated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#ab6953a37440bdb195c1235a99fb604db",tooltip=" "];
  Node7 -> Node8 [id="edge9_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="detail::tm_writer\<\l OutputIt, char_type\l \>::on_12_hour_time",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classdetail_1_1tm__writer.html#acac60187a1bae85bc87379c974bc6e45",tooltip=" "];
  Node7 -> Node10 [id="edge10_Node000007_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="detail::tm_writer\<\l OutputIt, char_type\l \>::on_iso_date",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classdetail_1_1tm__writer.html#aea707828446626d840d3cb1e6187179e",tooltip=" "];
  Node7 -> Node11 [id="edge11_Node000007_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="detail::tm_writer\<\l OutputIt, char_type\l \>::on_us_date",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classdetail_1_1tm__writer.html#afe51a54407933aca94f3f33297ea2d93",tooltip=" "];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="ptr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$format_8h.html#adb6e274f8eb0b74b2865215e1b49c535",tooltip="Converts p to const void* for pointer formatting."];
  Node12 -> Node13 [id="edge13_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="allocBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#af15278d7a4bba22072363abe7b04fb1e",tooltip="分配指定大小的内存"];
  Node13 -> Node14 [id="edge14_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="FastlzCompressData",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$common_8cpp.html#a18f079fdf22e51b397aecbc9b760de21",tooltip="fastlz 压缩数据。"];
  Node13 -> Node28 [id="edge15_Node000013_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="FastlzDecompressData",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$common_8cpp.html#a4a392b934d85ed54106c471cad69665d",tooltip="fastlz 解压数据。"];
  Node13 -> Node29 [id="edge16_Node000013_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="NedAllocatedObject\l::operator new",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_ned_allocated_object.html#a2ecdbbd7b03ce152aff07a873204b0a4",tooltip="重载 new 运算符"];
  Node13 -> Node30 [id="edge17_Node000013_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="NedAllocatedObject\l::operator new[]",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_ned_allocated_object.html#a6668c14f4f23fb9eaf6b94ee949d0e70",tooltip="重载 new[] 运算符"];
  Node12 -> Node31 [id="edge18_Node000012_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="allocBytesAligned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#ae371b68680b7cf241fe3f7973b2068f6",tooltip="分配对齐的内存"];
  Node12 -> Node32 [id="edge19_Node000012_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="deallocBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#a394ed5305e19853a8aa9203cdea51dd7",tooltip="释放内存"];
  Node32 -> Node14 [id="edge20_Node000032_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node28 [id="edge21_Node000032_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node33 [id="edge22_Node000032_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="NedAllocatedObject\l::operator delete",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_ned_allocated_object.html#a3d97a7e2a0208075b4b37328c96ed390",tooltip="重载 delete 运算符"];
  Node32 -> Node34 [id="edge23_Node000032_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="NedAllocatedObject\l::operator delete",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_ned_allocated_object.html#a1d20f55f553fd4a0a730ebb55b345d79",tooltip="重载 placement delete 运算符"];
  Node32 -> Node35 [id="edge24_Node000032_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="NedAllocatedObject\l::operator delete[]",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_ned_allocated_object.html#a1d8b2d6f17242ae0d182b0f7a98ba54f",tooltip="重载 delete[] 运算符"];
  Node12 -> Node36 [id="edge25_Node000012_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="deallocBytesAligned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#a28428a3cf771b12c5dbb6aaad0ad0a2b",tooltip="释放对齐的内存"];
  Node12 -> Node37 [id="edge26_Node000012_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="flz_readu32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$fastlz_8c.html#a840ac800deb7c00f2994ef2663819817",tooltip="读取 32 位无符号整数"];
  Node37 -> Node38 [id="edge27_Node000037_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="fastlz1_compress",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$fastlz_8c.html#a1f149a66a870832b28adbd7a3e0464e3",tooltip="级别 1 压缩实现"];
  Node37 -> Node45 [id="edge28_Node000037_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="fastlz2_compress",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$fastlz_8c.html#a06ae67595a80640a59169dfa4a5c8b44",tooltip="级别 2 压缩实现"];
  Node12 -> Node46 [id="edge29_Node000012_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="for_each_codepoint",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacedetail.html#a9eaa91e3d4139e9d0b119691560d1448",tooltip=" "];
  Node46 -> Node47 [id="edge30_Node000046_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="code_point_index",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#aecb4aa6caa07864c7d60927ced8b685a",tooltip=" "];
  Node46 -> Node48 [id="edge31_Node000046_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="compute_width",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a7475fe761a7eca15f3f2fd32523fa3ee",tooltip=" "];
  Node12 -> Node51 [id="edge32_Node000012_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="format_base2e",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a644fd262d53d87df245ef443e97a9817",tooltip=" "];
  Node12 -> Node52 [id="edge33_Node000012_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="format_decimal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a31f1c8fd33b9eebb81a5626225feeace",tooltip=" "];
  Node12 -> Node53 [id="edge34_Node000012_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="fwrite_all",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacedetail.html#a6eae6f0ab0e5c18e7a4d3e3890667341",tooltip=" "];
  Node12 -> Node59 [id="edge35_Node000012_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="spdlog::details::os\l::fwrite_bytes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacespdlog_1_1details_1_1os.html#a60b2dbca3ecc5ce48ae7f8b358144420",tooltip=" "];
  Node12 -> Node65 [id="edge36_Node000012_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="detail::glibc_file\l::get_read_buffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classdetail_1_1glibc__file.html#a155aa13c9878ae37550ff81cb87508e4",tooltip=" "];
  Node12 -> Node66 [id="edge37_Node000012_Node000066",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="detail::glibc_file\l::get_write_buffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classdetail_1_1glibc__file.html#abd2cfc1588cda4e953af12950f3bfca3",tooltip=" "];
  Node12 -> Node67 [id="edge38_Node000012_Node000067",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="ikcp_ack_push",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$ikcp_8cpp.html#ab94e2deb99103c804fb49ac6a5447a42",tooltip=" "];
  Node12 -> Node70 [id="edge39_Node000012_Node000070",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="ikcp_encode_seg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ikcp_8cpp.html#aa57723466b099571367b9f4de3ece54c",tooltip=" "];
  Node70 -> Node71 [id="edge40_Node000070_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="ikcp_flush",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$ikcp_8cpp.html#a2a3d9426417d04f8f1bbfbded14b4eb1",tooltip=" "];
  Node12 -> Node71 [id="edge41_Node000012_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node77 [id="edge42_Node000012_Node000077",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="ikcp_free",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$ikcp_8cpp.html#abf2a2ab7bd7f5c19cbe61165e4edd9d1",tooltip=" "];
  Node77 -> Node67 [id="edge43_Node000077_Node000067",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node89 [id="edge44_Node000012_Node000089",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node89 [id="Node000089",label="ikcp_getconv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ikcp_8cpp.html#a0c812352b08070a1c1bd9f0f57c14379",tooltip=" "];
  Node12 -> Node90 [id="edge45_Node000012_Node000090",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node90 [id="Node000090",label="Memorycalloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#aaad3a091fc04393206d90605fc5b3c46",tooltip="分配并清零内存"];
  Node12 -> Node91 [id="edge46_Node000012_Node000091",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node91 [id="Node000091",label="MemoryFree",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#a78c24ba3980927619d7e56e81d3b0633",tooltip="释放内存（替代 free）"];
  Node12 -> Node92 [id="edge47_Node000012_Node000092",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node92 [id="Node000092",label="MemoryMalloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#a2ce21103b56ddc014cd8357d6acf2f54",tooltip="分配内存（替代 malloc）"];
  Node12 -> Node93 [id="edge48_Node000012_Node000093",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="Memoryrealloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_ned_allocator_impl_8cpp.html#abb53b80d0d06dec88682b2f69a9e3cec",tooltip="重新分配内存"];
  Node12 -> Node33 [id="edge49_Node000012_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node34 [id="edge50_Node000012_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node35 [id="edge51_Node000012_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node94 [id="edge52_Node000012_Node000094",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 [id="Node000094",label="NedAllocatedObject\l::operator new",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_ned_allocated_object.html#ad938b17cfbe5883d65d9decda4e6def9",tooltip="重载 placement new 运算符"];
  Node12 -> Node95 [id="edge53_Node000012_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="parse_chrono_format",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacedetail.html#a2a155b536c7479f0db71c80503974827",tooltip=" "];
  Node12 -> Node101 [id="edge54_Node000012_Node000101",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node101 [id="Node000101",label="write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a89dea9ae2ccdef585b85cf0876e9216d",tooltip=" "];
  Node1 -> Node102 [id="edge55_Node000001_Node000102",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 [id="Node000102",label="signbit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a9dffefc41110dec0e760d10e635de1a3",tooltip=" "];
  Node102 -> Node102 [id="edge56_Node000102_Node000102",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 -> Node103 [id="edge57_Node000102_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node103 [id="Node000103",label="write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a6da38163e1b603603b3deb3d8ad67b30",tooltip=" "];
  Node102 -> Node5 [id="edge58_Node000102_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node104 [id="edge59_Node000001_Node000104",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node104 [id="Node000104",label="detail::dragonbox::\lto_decimal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail_1_1dragonbox.html#afd01f0cf7248defdd46c0921187f740b",tooltip=" "];
  Node104 -> Node103 [id="edge60_Node000104_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node104 -> Node5 [id="edge61_Node000104_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node105 [id="edge62_Node000001_Node000105",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node105 [id="Node000105",label="write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a17a01247796a9d5bdbbe57a71127b677",tooltip=" "];
  Node1 -> Node103 [id="edge63_Node000001_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
